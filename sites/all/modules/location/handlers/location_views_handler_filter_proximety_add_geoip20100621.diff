--- location_views_handler_filter_proximity.inc
+++ (clipboard)
@@ -25,8 +25,7 @@
         'country' => '',
         'search_distance' => 100,
         'search_units' => 'mile',
-        'geoip' => FALSE,
-    ),
+      ),
     );
     return $options;
   }
@@ -131,13 +130,6 @@
       ),
       '#default_value' => $this->value['search_units'],
     );
-    if (module_exists('geoip')) {
-      $form['value']['geoip'] = array(
-        '#type' => 'checkbox',
-        '#title' => t('Default to IP location'),
-        '#default_value' => $this->value['geoip'],
-      );
-    }
   }
 
   function exposed_form(&$form, &$form_state) {
@@ -157,7 +149,6 @@
     if ($type != 'postal') {
       unset($form[$key]['country']);
     }
-    unset($form[$key]['geoip']);   
   }
 
   // Used from the distance field.
@@ -168,15 +159,6 @@
     }
     // @@@ Switch to mock location object and rely on location more?
 
-    // IP lookup if geoip installed
-    if ($this->value['geoip'] && module_exists('geoip')) {
-      if ($geoip_location = geoip_city()) {
-        $this->value['latitude'] = $geoip_location->latitude;
-        $this->value['longitude'] = $geoip_location->longitude;
-        $return = $this->value['latitude'] && $this->value['longitude'];
-      }
-    }
-
     if ($this->options['type'] == 'postal' || $this->options['type'] == 'postal_default') {
       // Force default for country.
       if ($this->options['type'] == 'postal_default') {
@@ -191,12 +173,12 @@
           $this->value['longitude'] = $coord['lon'];
         }
         else {
-          return $return;
+          return false;
         }
       }
       else {
         // @@@ Implement full address lookup?
-        return $return;
+        return false;
       }
     }
     if (empty($this->value['latitude']) || empty($this->value['longitude'])) {
